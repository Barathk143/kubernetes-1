apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: client
  namespace: quobyte
spec:
  template:
    metadata:
      labels:
        role: client
        version: 1.3.6
    spec:
      containers:
      - name: quobyte-client
        image: quay.io/quobyte/quobyte-client:1.3.6
        command:
          - /bin/sh
          - -xec
          - |
            ADDR=$(echo $(nslookup ${QUOBYTE_REGISTRY} | grep -A10 -m1 -e 'Name:' | grep Address | awk '{split($0,a,":"); print a[2]}'  | awk '{print $1":7866"}') | tr ' ' ,)
            if cut -d" " -f2 /etc/mtab | grep -q ${QUOBYTE_MOUNT_POINT}; then
              # test this case
              OPTS="-o remount"
            else
              mkdir -p ${QUOBYTE_MOUNT_POINT}
            fi
            /bin/nsenter -t 1 --wd=. -m -- \
              lib/ld-linux-x86-64.so.2 \
              --library-path ./lib \
            ./bin/mount.quobyte --allow-usermapping-in-volumename -f -d ${QUOBYTE_CLIENT_LOG_LEVEL} ${OPTS} ${ADDR}/ ${QUOBYTE_MOUNT_POINT}
        securityContext:
          privileged: true
        env:
          - name: QUOBYTE_CLIENT_HTTP_PORT
            value: "55000"
          - name: QUOBYTE_CLIENT_LOG_LEVEL
            value: INFO
          - name: QUOBYTE_REGISTRY
            value: registry
          - name: QUOBYTE_MOUNT_POINT
            value: /var/lib/kubelet/plugins/kubernetes.io~quobyte
        ports:
          - name: http-port
            containerPort: 55000
            hostPort: 55000
            protocol: TCP
        volumeMounts:
          - name: k8s-plugin-dir
            mountPath: /var/lib/kubelet/plugins
          - name: rootfs
            mountPath: /rootfs
        lifecycle:
          preStop:
            exec:
              command: ["/bin/bash", "-xc", "umount -f ${QUOBYTE_MOUNT_POINT}"]
      hostPID: true
      volumes:
      - name: k8s-plugin-dir
        hostPath:
          path: /var/lib/kubelet/plugins
      - name: rootfs
        hostPath:
          path: /
